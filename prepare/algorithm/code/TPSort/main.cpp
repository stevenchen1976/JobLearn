#include "TPSort1.hpp"
#include "TPSort2.hpp"

using namespace std;


/* 图算法----拓扑排序
 *
 * 图相关概念:
 * 有向无环图:如果一个有向图的任意顶点都无法通过一些有向边回到自身,那么称这个有向图为有向无环图.
 * 拓扑排序概念:拓扑排序是将有向无环图的所有顶点排成一个线性序列,使得对图中的任意两个顶点u v,如果存在边u->v,那么在序列中u一定在v前面,这个序列又被称为拓扑序列.
 *             说直白点:拓扑排序,就是用来确定事物发生的顺序的.
 *
 * 拓扑排序算法实现:
 * 1. 可以借助图的广度优先搜索算法(BFS)
 * 2. 可以借助图的深度优先搜索算法(DFS)
 *
 * 拓扑排序算法应用:
 * 1. 借助有向无环图描述一系列任务关系,用拓扑排序来确定这一系列任务发生的顺序
 * 2. 可以判断有向图是否存在闭环
 *
 * */


int main() {
    TPSort1::TestTPSort();          //有向无环图---拓扑排序-----BFS
    TPSort2::TestTPSort();          //有向无环图---拓扑排序-----DFS
}
